# Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"). You
# may not use this file except in compliance with the License. A copy of
# the License is located at
#
#     http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF
# ANY KIND, either express or implied. See the License for the specific
# language governing permissions and limitations under the License.

# For more information on creating a Dockerfile
# https://docs.docker.com/compose/gettingstarted/#step-2-create-a-dockerfile

#FROM tensorflow/tensorflow:1.12.0-gpu-py3
FROM tensorflow/serving:1.12.0-gpu as tensorflow_serving_image
FROM nvidia/cuda:9.0-base-ubuntu16.04


#RUN apt-get update && apt-get install -y --no-install-recommends git curl nginx wget ca-certificates

RUN apt-get update && apt-get install -y --no-install-recommends software-properties-common
RUN add-apt-repository ppa:jonathonf/python-3.6

ENV NCCL_VERSION=2.3.5-2+cuda9.0
ENV CUDNN_VERSION=7.3.1.20-1+cuda9.0
ENV TF_TENSORRT_VERSION=4.1.2

RUN apt-get update && apt-get install -y --no-install-recommends \
        wget \
        zip \
        unzip \
        git \
        ca-certificates \
        cuda-command-line-tools-9-0 \
        cuda-cublas-9-0 \
        cuda-cufft-9-0 \
        cuda-curand-9-0 \
        cuda-cusolver-9-0 \
        cuda-cusparse-9-0 \
        libcudnn7=${CUDNN_VERSION} \
        libnccl2=${NCCL_VERSION} \
        libgomp1 \
        python3.6 \
        python3.6-dev \
        curl \
        nginx \
        && \
# The 'apt-get install' of nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0
# adds a new list which contains libnvinfer library, so it needs another
# 'apt-get update' to retrieve that list before it can actually install the
# library.
# We don't install libnvinfer-dev since we don't need to build against TensorRT,
# and libnvinfer4 doesn't contain libnvinfer.a static library.
    apt-get update && apt-get install -y --no-install-recommends \
        nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \
    apt-get update && apt-get install -y --no-install-recommends \
        libnvinfer4=${TF_TENSORRT_VERSION}-1+cuda9.0 && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    rm /usr/lib/x86_64-linux-gnu/libnvinfer_plugin* && \
    rm /usr/lib/x86_64-linux-gnu/libnvcaffe_parser* && \
    rm /usr/lib/x86_64-linux-gnu/libnvparsers*

RUN curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py"
RUN python3.6 get-pip.py

RUN pip3.6 --version
RUN pip --version

RUN ln -s /usr/bin/python3.6 /usr/bin/python

RUN python --version

#Install protobuff/protoc
RUN curl -OL https://github.com/google/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
RUN unzip protoc-3.2.0-linux-x86_64.zip -d protoc3
RUN mv protoc3/bin/* /usr/local/bin/
RUN mv protoc3/include/* /usr/local/include/

ENV PATH="/opt/ml/code:${PATH}"

# /opt/ml and all subdirectories are utilized by SageMaker, we use the /code subdirectory to store our user code.
COPY /resources /opt/ml/code
WORKDIR /opt/ml/code

RUN pip install --upgrade pip
RUN pip install matplotlib
RUN pip install absl-py
#RUN pip install -U pip setuptools

# Install TF Serving pkg
COPY --from=tensorflow_serving_image /usr/bin/tensorflow_model_server /usr/bin/tensorflow_model_server

#RUN cd tensorflow-models/research/slim \
RUN pip install -e tensorflow-models/research/slim

#Build and install Tensorflow's Object Detection API
WORKDIR tensorflow-models/research
RUN protoc object_detection/protos/*.proto --python_out=.
RUN python setup.py build
RUN python setup.py install

WORKDIR /opt/ml/code

#Update the python path to include the object detection API
ENV PYTHONPATH=${PYTHONPATH}:tensorflow-models/research:tensorflow-models/research/slim:tensorflow-models/research/object_detection

RUN echo $PYTHONPATH

RUN pip install -U tensorflow-serving-api==1.12.0
RUN pip install -U scikit-image
RUN pip install -U scikit-learn
RUN pip install -U flask
RUN pip install -U gevent
RUN pip install -U gunicorn
RUN pip install -U cython
RUN pip install -U scipy
RUN pip install "git+https://github.com/philferriere/cocoapi.git#egg=pycocotools&subdirectory=PythonAPI"

# Test Tensorflow's Object Detection API
RUN python tensorflow-models/research/object_detection/builders/model_builder_test.py
